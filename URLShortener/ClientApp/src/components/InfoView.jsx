import React, { Component } from 'react';

export class InfoView extends Component {
  static displayName = InfoView.name;

  render() {
    return (
    <div>
      <h2>Алгоритм генерації коротких URL</h2>
      <p>
        <strong>Обрання символів:</strong>
        <br />
        Визначається кількість символів у короткому коді (зазвичай фіксована довжина).
        Створюється алфавіт, який включає великі та малі літери англійського алфавіту, а також цифри.
      </p>
      <p>
        <strong>Генерація Випадкового Коду:</strong>
        <br />
        Для створення короткого коду випадковим чином обираються символи з визначеного алфавіту.
        Генерується послідовність символів заданої довжини.
      </p>
      <p>
        <strong>Перевірка Унікальності:</strong>
        <br />
        Отриманий короткий код перевіряється на унікальність у системі.
        Якщо код вже використовується для іншого URL, генерується новий код та проводиться перевірка.
      </p>
      <p>
        <strong>Застосування Коду:</strong>
        <br />
        Унікальний короткий код стає частиною короткого URL, яке асоціюється з вихідним довгим URL.
      </p>
      <p>
        <strong>Використання Короткого URL:</strong>
        <br />
        Короткий URL доступний для використання і може бути вставлений в посилання на веб-сайт.
      </p>
      <p>
        <strong>Розшифрування Короткого URL:</strong>
        <br />
        При отриманні запиту за коротким URL система використовує короткий код для ідентифікації відповідного довгого URL.
      </p>
      <p>
        <strong>Перенаправлення:</strong>
        <br />
        Користувач, який відкриває короткий URL, перенаправляється на відповідний довгий URL.
      </p>
      <p>
        Цей алгоритм дозволяє створювати короткі та легкі для запам'ятовування URL, забезпечуючи унікальність
        та можливість відновлення оригінального посилання. Використання випадкових символів гарантує велику
        кількість унікальних поєднань, що робить атаки на злам більш складними.
      </p>
    </div>
    );
  }
}
